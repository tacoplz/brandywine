<div class="container">
<center><b><p id="notice"><%= notice %></p></b></center>
<div class="brandywine_form">
  <% if flash[:alert] %>
    <center><b><p id="notice"><%= flash[:alert] %></p></b></center>
  <% end %>
  <%# This allow us to create the first user %>
  <% if User.count == 0 %>
    <legend> Please create first user </legend>
    <%= link_to "New User", new_user_path %>
  <% end %>
  <%# unlike the form_for tag, the form_tag creates a regular HTML <form>
  nside that form, it uses text_field_tag and password_field_tag, two
  helpers that create HTML <input> tags. %>
  <%= form_tag do %>
    <fieldset>
      <legend><center>User Login</center></legend>
      <center>
      <div class= "item panel panel-default", style= "margin-right: 20%; margin-left: 20%;" >
        <%= label_tag :name, 'Username:', style: "margin-right: 70%;"%>
        <%#the following and the password_field_tag are helpers that
        create HTML <input> tags. the first value is the name to give the
        field and the second is the value with which the field will be
        populated. Doing this allows us to associate values in the
        params structure directly with form fields- NO MODEL OBJECT IS
        REQUIRED. %>
        <%= text_field_tag :name, params[:name], class: "form-control", style: "width: 80%;" %>


        <%= label_tag :password, 'Password:', style: "margin-right: 70%;" %>
        <%= password_field_tag :password, params[:password], class: "form-control", style: "width: 80%;" %>
        <%= link_to "(forgot password?)", new_password_reset_path %>
      </div></center>
      <div class= loginbutton>
        <%= submit_tag "Login", class: 'btn', style: "margin-right: 20%;" %>
      </div>
    </fieldset>
  <% end %>
</div>
</div>
